

///////A. Odd One Out

#include<bits/stdc++.h>
using namespace std;
int main(){
	int t;
	cin>>t;
	while(t--){
	
          int n;
		  cin>>n;
		  int a=n;
		  int flag=0;
		  int lg=0;
		  cin>>n;
		  int b = n;
	    for(int i=0;i<1;i++){
			cin>>n;
			if(n==a){
              flag=1;
			}
			else if (n == b){
			  lg=1;
			}
			else{
				cout<<n<<endl;
			}
		}
		if(flag==1){
			cout<<b<<endl;
		}
		else if(lg==1){
			cout<<a<<endl;
		}
	}
	
}





    //////B. Not Quite Latin Square

#include<bits/stdc++.h>
using namespace std;
int main(){
	int t;
	cin>>t;
	while(t--){
	      
		  //string tmp;
		  int flag=0;
		  int kl = 'A'+'B'+'C';
		  int jg = 'A'+'B'+'C';
		  int tmp=0;
		  string str1;
		  string str2;
		  string str3;

		  cin>>str1;
		  cin>>str2;
		  cin>>str3;

		  for(int i=0;i<3;i++){
			 if(str1[i]=='?'){

			 }
			 else{
				tmp += str1[i];
			 }
		  }
		  kl = min (kl,tmp);
		  tmp=0;
		  for(int i=0;i<3;i++){
			 if(str2[i]=='?'){

			 }
			 else{
				tmp += str2[i];
			 }
		  }
		  kl = min (kl,tmp);
		  tmp=0;
		  for(int i=0;i<3;i++){
			 if(str3[i]=='?'){

			 }
			 else{
				tmp += str3[i];
			 }
		  }
		  kl = min (kl,tmp);
		  tmp=0;
          char a = jg-kl;
	cout<<a <<endl;
	
}

}




       ///C. Can I Square?



#include<bits/stdc++.h>
using namespace std;
int main(){
	int t;
	cin>>t;
	while(t--){
	   long long  n;
	   long long  sum=0;
	   cin>>n;
	   for(int i=0;i<n;i++){
		  long long  x;
		  cin>>x;
        sum+=x;
	   }
	   double kl = sqrt(sum);
	   long long  gk  = sqrt(sum);
	   if(kl==gk){
		cout<<"YES"<<endl;
	   }
	   else{
		cout<<"NO"<<endl;
	   }
}

} 






      /////////D. Unnatural Language Processing



#include<bits/stdc++.h>
using namespace std;
int main()
{
    int t; cin>>t;
    while(t--)
    {  int n; cin>>n;
       string str; cin>>str;
       int i;
       unordered_map<char,int>m{{'a',10},{'e',10},{'i',10},{'o',10},{'u',10}};
       for(int i=0;i<str.size();i++)
       {
           cout<<str[i];
           if(i+2>=str.size()) continue;
           else if(m.find(str[i])==m.end()  && m.find(str[i+1])==m.end())cout<<".";
           else if(m.find(str[i])!=m.end()  && m.find(str[i+2])!=m.end())cout<<".";
       }
       cout<<endl;
 
    }
}  
